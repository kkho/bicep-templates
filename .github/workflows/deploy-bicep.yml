name: Deploy Bicep Templates

on:
  push:
    branches: [main, develop]
    paths:
      - "modules/**"
      - "deployments/**"
      - ".github/workflows/**"
  pull_request:
    branches: [main]
    paths:
      - "modules/**"
      - "deployments/**"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - staging
          - prod
      module:
        description: "Module to deploy (leave empty for all)"
        required: false
        type: string

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  validate:
    name: Validate Bicep Templates
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: azure/setup-azure-cli@v2
        with:
          version: latest

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Validate Bicep files
        run: |
          # Find all .bicep files and validate them
          find . -name "*.bicep" -not -path "./.git/*" | while read bicepfile; do
            echo "Validating: $bicepfile"
            az bicep build --file "$bicepfile"
          done

      - name: Validate parameter files
        run: |
          # Find all .bicepparam files and validate them
          find . -name "*.bicepparam" -not -path "./.git/*" | while read paramfile; do
            echo "Validating parameter file: $paramfile"
            # Extract the template file path from the parameter file
            template_file=$(grep "using " "$paramfile" | sed "s/using '//" | sed "s/'//")
            template_dir=$(dirname "$paramfile")
            full_template_path="$template_dir/$template_file"
            
            if [ -f "$full_template_path" ]; then
              echo "Validating template with parameters: $full_template_path"
              az deployment group validate \
                --resource-group rg-validation-temp \
                --parameters "$paramfile" \
                --query "properties.provisioningState" \
                --output tsv || echo "Validation failed for $paramfile"
            else
              echo "Template file not found: $full_template_path"
            fi
          done

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/develop' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy AKS Arc to Dev
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: rg-aks-arc-dev
          template: modules/compute/aks-arc/aksarc.bicep
          parameters: modules/compute/aks-arc/parameters/dev.bicepparam
          failOnStdErr: false

      - name: Deploy ACR to Dev
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: rg-containers-dev
          template: modules/containers/acr/main.bicep
          parameters: modules/containers/acr/parameters/dev.bicepparam
          failOnStdErr: false

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Staging
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: rg-aks-arc-staging
          template: modules/compute/aks-arc/aksarc.bicep
          parameters: modules/compute/aks-arc/parameters/staging.bicepparam
          failOnStdErr: false

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [validate, deploy-staging]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Production
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: rg-aks-arc-prod
          template: modules/compute/aks-arc/aksarc.bicep
          parameters: modules/compute/aks-arc/parameters/prod.bicepparam
          failOnStdErr: false
